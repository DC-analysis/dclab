name: Checks

on:
  push:
  pull_request:

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.9', '3.x']
        os: [macos-latest, ubuntu-latest, windows-latest]
        extras: ['all', 'dcor-s3', 'none']
        exclude:
          # problems with compiling on arm64
          - python-version: '3.9'
            os: macos-latest
            extras: 'all'
      fail-fast: false
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@main
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@main
      with:
        python-version: ${{ matrix.python-version }}
    # Temporary fix for 'pip install imageio-ffmpeg'
    # not including the FFMPEG binary on Apple Silicon macs
    # This step can be removed when issue is fixed in imageio-ffmpeg
    # https://github.com/imageio/imageio-ffmpeg/issues/71
    - name: Setup FFmpeg
      if: runner.name == 'macos-latest'
      run: |
        brew update
        brew install ffmpeg
    # Temporary fix for 'pip install imageio-ffmpeg'
    # not including the FFMPEG binary on Apple Silicon macs
    # This step can be removed when issue is fixed in imageio-ffmpeg
    # https://github.com/imageio/imageio-ffmpeg/issues/71
    - name: Setup FFmpeg
      if: runner.os == 'macOS'
      uses: AnimMouse/setup-ffmpeg@v1
    - name: Install dependencies
      run: |
        # prerequisites
        python -m pip install --upgrade pip wheel
        python -m pip install coverage flake8 pytest
    - name: install R
      if: matrix.extras == 'all'
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.1.2'
    - name: Install R packages for lme4
      if: matrix.extras == 'all'
      shell: bash
      run: |
        R --version
        R -e "install.packages(c('statmod','nloptr','lme4'),repos='http://cran.rstudio.org')"
    - name: Install dclab with all possible dependencies
      if: matrix.extras == 'all'
      run: |
        pip install -e .[all]
        pip install -r tests/requirements.txt
    - name: Install dclab with DCOR dependencies
      if: matrix.extras == 'dcor-s3'
      run: |
        pip install -e .[dcor,http,s3]
    - name: Install dclab with minimal dependencies
      if: matrix.extras == 'none'
      run: |
        pip install -e .
    - name: List installed packages
      run: |
        pip freeze
    - name: Lint with flake8
      run: |
        flake8 --exclude _version.py .
    - name: Test with pytest
      run: |
        coverage run --source=dclab -m pytest tests
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      # FIXME Limit runtime until
      # https://github.com/codecov/codecov-action/issues/1316 is resolved
      timeout-minutes: 1
      continue-on-error: true
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
