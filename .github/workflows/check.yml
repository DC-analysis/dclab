name: Checks

on:
  push:
  pull_request:

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.8', '3.11']
        os: [macos-latest, ubuntu-latest, windows-latest]
        extras: ['all', 'dcor-s3', 'none']
        exclude:
          # urllib3>=2 is required, dependency conflict
          - python-version: '3.8'
            extras: 'all'
          - python-version: '3.8'
            extras: 'dcor-s3'
      fail-fast: false
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        # prerequisites
        python -m pip install --upgrade pip wheel
        python -m pip install coverage flake8 pytest
    - name: install R
      if: matrix.extras == 'all'
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '3.6.3'
    - name: Downgrade rpy2 (Windows)
      if: runner.os == 'Windows' && matrix.extras == 'all'
      run: |
        # Force installation of rpy2 3.5.12
        # https://github.com/rpy2/rpy2/issues/1044
        python -m pip install rpy2==3.5.12
    - name: install lme4 (Windows)
      if: runner.os == 'Windows'
      shell: bash
      run: |
        R -e "install.packages('lme4', repos='http://cran.rstudio.org', type='binary')"
    - name: Install dclab with all possible dependencies
      if: matrix.extras == 'all'
      run: |
        pip install -e .[all]
    - name: Install dclab with DCOR dependencies
      if: matrix.extras == 'dcor-s3'
      run: |
        pip install -e .[dcor,http,s3]
    - name: Install dclab with minimal dependencies
      if: matrix.extras == 'none'
      run: |
        pip install -e .
    - name: List installed packages
      run: |
        pip freeze
    - name: Test with pytest
      run: |
        coverage run --source=dclab -m pytest tests
    - name: Lint with flake8
      run: |
        flake8 --exclude _version.py .
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3